{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"fs-jetpack\"","webpack:///./src/helpers/window.js","webpack:///./src/menu/edit_menu_template.js","webpack:///./src/menu/dev_menu_template.js","webpack:///external \"url\"","webpack:///external \"path\"","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","_electron","_fsJetpack","windowState","options","userDataDir","jetpack","cwd","app","getPath","stateStoreFile","defaultSize","width","height","win","state","restoredState","read","err","assign","restore","screen","getAllDisplays","some","display","bounds","x","y","windowWithinBounds","getPrimaryDisplay","resetToDefaults","BrowserWindow","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","label","submenu","accelerator","selector","type","devMenuTemplate","click","getFocusedWindow","webContents","reloadIgnoringCache","toggleDevTools","quit","_path","_interopRequireDefault","_url","_dev_menu_template","_edit_menu_template","_window","_env","env","userDataPath","setPath","menus","editMenuTemplate","push","Menu","setApplicationMenu","buildFromTemplate","mainWindow","default","loadURL","url","format","pathname","path","join","__dirname","protocol","slashes","openDevTools"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"electron\");","module.exports = require(\"fs-jetpack\");","// This helper remembers the size and position of your windows (and restores\n// them in that place after app relaunch).\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from \"electron\";\nimport jetpack from \"fs-jetpack\";\n\nexport default (name, options) => {\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\n  const stateStoreFile = `window-state-${name}.json`;\n  const defaultSize = {\n    width: options.width,\n    height: options.height\n  };\n  let state = {};\n  let win;\n\n  const restore = () => {\n    let restoredState = {};\n    try {\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\n    } catch (err) {\n      // For some reason json can't be read (might be corrupted).\n      // No worries, we have defaults.\n    }\n    return Object.assign({}, defaultSize, restoredState);\n  };\n\n  const getCurrentPosition = () => {\n    const position = win.getPosition();\n    const size = win.getSize();\n    return {\n      x: position[0],\n      y: position[1],\n      width: size[0],\n      height: size[1]\n    };\n  };\n\n  const windowWithinBounds = (windowState, bounds) => {\n    return (\n      windowState.x >= bounds.x &&\n      windowState.y >= bounds.y &&\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\n      windowState.y + windowState.height <= bounds.y + bounds.height\n    );\n  };\n\n  const resetToDefaults = () => {\n    const bounds = screen.getPrimaryDisplay().bounds;\n    return Object.assign({}, defaultSize, {\n      x: (bounds.width - defaultSize.width) / 2,\n      y: (bounds.height - defaultSize.height) / 2\n    });\n  };\n\n  const ensureVisibleOnSomeDisplay = windowState => {\n    const visible = screen.getAllDisplays().some(display => {\n      return windowWithinBounds(windowState, display.bounds);\n    });\n    if (!visible) {\n      // Window is partially or fully not visible now.\n      // Reset it to safe defaults.\n      return resetToDefaults();\n    }\n    return windowState;\n  };\n\n  const saveState = () => {\n    if (!win.isMinimized() && !win.isMaximized()) {\n      Object.assign(state, getCurrentPosition());\n    }\n    userDataDir.write(stateStoreFile, state, { atomic: true });\n  };\n\n  state = ensureVisibleOnSomeDisplay(restore());\n\n  win = new BrowserWindow(Object.assign({}, options, state));\n\n  win.on(\"close\", saveState);\n\n  return win;\n};\n","export const editMenuTemplate = {\n  label: \"Edit\",\n  submenu: [\n    { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n    { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n    { type: \"separator\" },\n    { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n    { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n    { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n    { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const devMenuTemplate = {\n  label: \"Development\",\n  submenu: [\n    {\n      label: \"Reload\",\n      accelerator: \"CmdOrCtrl+R\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache();\n      }\n    },\n    {\n      label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    },\n    {\n      label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n};\n","module.exports = require(\"url\");","module.exports = require(\"path\");","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, Menu } from \"electron\";\nimport { devMenuTemplate } from \"./menu/dev_menu_template\";\nimport { editMenuTemplate } from \"./menu/edit_menu_template\";\nimport createWindow from \"./helpers/window\";\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\nconst setApplicationMenu = () => {\n  const menus = [editMenuTemplate];\n  if (env.name !== \"production\") {\n    menus.push(devMenuTemplate);\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n};\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu();\n\n  const mainWindow = createWindow(\"main\", {\n    width: 1000,\n    height: 600\n  });\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    mainWindow.openDevTools();\n  }\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"sourceRoot":""}